Для работы программы укажите путь к анализируемому файлу в TextAnalyzer.py: 105 строка, file path (Для этого откройте файл в текстовом редакторе и замените в строке кода стандартный путь на Ваш)
Запустите TextAnalyzer.py через терминал (предварительно указав путь к исполняемому файлу), либо через редактор кода
После завершения, программа создаст csv файл, а также папку c графиками в jpg

Проблемы и рекомендации по улучшению:
Обработка через cpu занимает слишком много времени: 6 минут для 152 текстов (Несмотря на то, что была подключена многопоточность для вычислений. Кроме того, у модели анализатора есть ограничение в 512 токенов. Было принято решение анализировать первые 256 токенов текста, чтобы ускорить работу программы и не выходить за рамки ограничений токенов, хотя это может отразиться на конечных результатах. По этой же причине была добавлена строка состояния, чтобы можно было понимать, получится ли обработать файл большого размера.
НО! Torch поддерживает использование CUDA ядер видеокарты. Такая видеокарта у меня есть. Если заставить ее работать в паре с CPU, то можно получить десятикратный прирост производительности. Однако я потратил 2 часа на попытку использовать GPU в программе. Причина в том, что последняя версия Torch использует CUDA ядра версии до 11.8 (у меня 12.7). Это можно попробовать решить при помощи полной переустановки драйвера с его откатом на более старую версию. Но пока этого сделать у меня не получится.
Как только получится заставить программу работать быстрее, то можно дополнительно оптимизировать ее для работы с несколькими html файлами сразу. Можно также сделать интерфейс и отдельную загрузку файлов html через flask с последующей возможностью хостинга анализатора и парсера 
